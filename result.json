[
[{"version":"v0.12.18","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v0.12.18","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":2},{"version":"v0.12.18","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v4.0.0","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":7},{"version":"v4.0.0","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v4.0.0","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v4.0.0","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v4.0.0","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v4.8.1","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":7},{"version":"v4.8.1","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v4.8.1","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v4.8.1","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v4.8.1","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v5.0.0","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":7},{"version":"v5.0.0","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v5.0.0","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v5.0.0","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v5.0.0","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v5.12.0","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":7},{"version":"v5.12.0","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v5.12.0","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v5.12.0","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v5.12.0","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v6.0.0","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v6.0.0","error":"illegal access","description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":-1},{"version":"v6.0.0","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v6.0.0","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v6.0.0","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v6.0.0","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v6.10.1","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v6.10.1","error":"illegal access","description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js","optimizationStatus":-1},{"version":"v6.10.1","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v6.10.1","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":2},{"version":"v6.10.1","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v6.10.1","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v7.0.0","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js"},{"version":"v7.0.0","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v7.0.0","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v7.0.0","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":7},{"version":"v7.0.0","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":7},{"version":"v7.0.0","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":7},{"version":"v7.0.0","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v7.0.0","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
,
[{"version":"v7.7.4","error":null,"description":"access non-existent index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-non-existent-arguments-index.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"access valid index of `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/access-valid-arguments-index.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"assign to `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/assign-to-arguments.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"function is bound using `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/bound-funtion.js"},{"version":"v7.7.4","error":null,"description":"calls `Function.prototype.bind()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/calls-bind.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"closure function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/closure-function.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"`debugger` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/debugger.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"calls `eval()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/eval.js","optimizationStatus":7},{"version":"v7.7.4","error":null,"description":"`for...in` loop using an array","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-using-array.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"`for...in` loop whose key exists in outer scope","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-with-outer-scope-key.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"`for...in` loop without simple enumerable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop-without-simple-enumerable.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"`for...in` loop","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/for-in-loop.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"leaks `arguments` via a closure","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/leaks-arguments-via-closure.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"manually copy `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/manually-copy-arguments.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"nested function with inadequate warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-inadequate-warmup.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"nested function with warmup","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/nested-functions-with-warmup.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"empty function","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/noop.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"object literal containing a getter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-getter.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"object literal containing a setter","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/object-literal-with-setter.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"overwrite named function argument and read `arguments` while in strict mode","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments-in-strict-mode.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"overwrite named function argument and read `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg-and-reading-arguments.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"overwrite named function argument","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/overwrite-named-arg.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"pass `arguments` to `call()`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/pass-arguments-to-call.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"Unsupported phi use of arguments","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-arguments.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"Unsupported phi use of const or let variable","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/phi-use-of-const-or-let-variables.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"Rest parameters","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/rest-parameters-min-4.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"return `arguments`","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/return-arguments.js","optimizationStatus":2},{"version":"v7.7.4","error":null,"description":"`switch` statement with 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-128-cases.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"`switch` statement with over 128 cases","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/switch-with-over-128-cases.js","optimizationStatus":1},{"version":"v7.7.4","error":null,"description":"`try...catch...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch-finally.js","optimizationStatus":7},{"version":"v7.7.4","error":null,"description":"`try...catch` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-catch.js","optimizationStatus":7},{"version":"v7.7.4","error":null,"description":"`try...finally` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/try-finally.js","optimizationStatus":7},{"version":"v7.7.4","error":null,"description":"`with` statement","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/with.js","optimizationStatus":7},{"version":"v7.7.4","error":null,"description":"yield","script":"/media/vladimir/DATA/Projects/will-it-optimize/test/yield.js","optimizationStatus":2}]
]
